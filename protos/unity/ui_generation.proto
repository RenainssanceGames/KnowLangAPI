syntax = "proto3";

package unity.ui_generation;

// Enum for tracking UI generation progress status
enum UIGenerationStatus {
  UIGENERATION_STATUS_UNSPECIFIED = 0;
  UIGENERATION_STATUS_ERROR = 1;
  UIGENERATION_STATUS_STARTING = 2;
  UIGENERATION_STATUS_GENERATING_UXML = 3;
  UIGENERATION_STATUS_GENERATING_USS = 4;
  UIGENERATION_STATUS_GENERATING_CSHARP = 5;
  UIGENERATION_STATUS_COMPLETE = 6;
}

// Service for Unity UI generation
service UIGenerationService {
  // Generate UI with streaming progress updates
  rpc GenerateUIStream(UIGenerationRequest) returns (stream UIGenerationStreamResponse);
  
  // Get the status of a UI generation request
  rpc GetGenerationStatus(GetGenerationStatusRequest) returns (UIGenerationStatusResponse);
  
  // Cancel a UI generation request
  rpc CancelGeneration(UIGenerationCancelRequest) returns (UIGenerationCancelResponse);
}

// Request for UI generation
message UIGenerationRequest {
  string ui_description = 1;
  map<string, string> chat_config_override = 4;
}

// Streaming response for UI generation
message UIGenerationStreamResponse {
  optional string uxml_content = 1;
  optional string uss_content = 2;
  optional string csharp_content = 3;
  string ui_description = 4;
  UIGenerationStatus status = 5;
  string progress_message = 6;
  optional string error_message = 7;
  bool is_complete = 8;
}

// Request for getting generation status
message GetGenerationStatusRequest {
  string request_id = 1;
}

// Response for generation status
message UIGenerationStatusResponse {
  string request_id = 1;
  UIGenerationStatus status = 2;
  string progress_message = 3;
  bool is_complete = 4;
  optional string error_message = 5;
}

// Request for canceling generation
message UIGenerationCancelRequest {
  string request_id = 1;
}

// Response for canceling generation
message UIGenerationCancelResponse {
  bool success = 1;
  string message = 2;
} 